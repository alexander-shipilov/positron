@import "../constructor/constructor--";
@import "../constructor/constructor-call-check";
@import "../constructor/extend--";
@import "../constructor/instance-of--";
@import "../constructor/new--";
@import "../constructor/object";
@import "../constructor/super";
@import "../core/@void";
@import "../core/const--";
@import "../core/is-undefined";
@import "../core/global";
@import "is-valid--";

/// Type constructor
/// @group types
/// @access private
@function type-constructor($validator) {
    @if (not constructor-call-check()) {
        @return null;
    }

    @return super((validator: (is-valid--, $validator)));
}

@function type--($validator, $other...) {
    @return new--(global(type), $validator);
}

@if (is-undefined(type)) {
    @include void(const--(type, extend--(constructor--(type-constructor, type), global(object))));
}
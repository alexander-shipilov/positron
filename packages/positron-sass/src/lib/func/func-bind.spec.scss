@import "../assert";
@import "../types/is-list";
@import "func-bind";
@import "func-call";

@function --func-bind--test($args...) {
    @return $args;
}

@include assert("func-bind: returns a list which can be passed to func-call", (
    is-list(func-bind(--func-bind--test, 1)) is-true,
    func-bind(--func-bind--test, 1) equal (--func-bind--test, 1),
    func-bind(func-bind(--func-bind--test, 1), 2) equal (--func-bind--test, 1, 2),
    func-bind(func-bind(func-bind(--func-bind--test, 1), 2), 3) equal (--func-bind--test, 1, 2, 3),
    func-call(func-bind(call, type-of, 1)) equal number,
));

@include assert("func-bind: shoud throw if passed arg is not a callable", (
    (func-bind, 1) throws "TypeError: Expected argument `$callable` of `func-bind()` to be a callable, instead received (number) 1",
));
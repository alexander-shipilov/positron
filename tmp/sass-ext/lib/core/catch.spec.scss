@import "../expect";
@import "../func/constant";
@import "catch";
@import "throw";

@function --catch-spec-throw() {
    $error: throw("erorr message");

    @return 1;
}

@include describe(catch) {
    @include it("should catch and return a thrown error", (
        catch(throw, "error") "error",
    ));

    @include it("should return null if exception was not thrown during passed function execution", (
        catch(func-constant, arg) null,
    ));

    @include it("should accept callable", (
        catch((throw, "error")) "error",
        catch((func-constant, arg)) null,
    ));
}

@include describe(catch-and-return) {
    @include it("should return a result of the passed function if exception was not thrown", (
        catch-and-return(func-constant, arg) arg,
    ));

    @include it("should return null if exception was thrown", (
        catch-and-return(throw, "error") null,
        catch-and-return(--catch-spec-throw) null
    ));


    @include it("should accept callable", (
        catch-and-return((throw, "error")) null,
        catch-and-return((func-constant, arg)) arg,
    ));
}
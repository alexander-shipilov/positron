@font-face {
    font-family: "iconfont";
    src: url("/fonts/iconfont.woff") format('woff'),
         url("/fonts/iconfont.ttf") format('truetype');
}

$icon-map:(
    "arrow-back": "E001","arrow-down": "E002","arrow-expand": "E003","arrow-left": "E004","arrow-right": "E005","bell": "E006","charts": "E007","checkbox-checked": "E008","checkbox": "E009","close": "E00A","credentials": "E00B","drag-handle": "E00C","edit": "E00D","envelope": "E00E","expand-collapse": "E00F","groups": "E010","live": "E011","main": "E012","minus": "E013","notification-approved": "E014","notification-denied": "E015","notification-request": "E016","notification-system": "E017","plus": "E018","reports": "E019","search": "E01A","settings": "E01B","upload": "E01C","users": "E01D","visibility-off": "E01E","visibility-on": "E01F",
);

%icon-props {
    font-family: "iconfont";
    font-style: normal;
    font-weight: normal;
    text-transform: none;
    text-rendering: auto;
    speak: none;
    line-height: 1;
    -moz-osx-font-smoothing: grayscale;
}

.icon {
    @extend %icon-props;
    text-align: center;
    position: relative;

    @each $key, $value in $icon-map {
        &-#{$key}:after {
            content: unquote("\"") + unquote(str-insert($value, "\\", 1)) + unquote("\"");
        }
    }
}

@mixin icon($key) {
    @if map-has-key($icon-map, $key) {
        @extend %icon-props;
        content: unquote("\"") + unquote(str-insert(map-get($icon-map, $key), "\\", 1)) + unquote("\"");
    }
    @else {
        @warn "Unfortunately, no value could be retrieved from `#{$key}`. "
        + "Please make sure it is defined in `$icon-map` map.";
    }
}